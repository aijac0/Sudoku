@inject BoardService BoardService
@using Sudoku_Library

<input class="@($"cell {(Cell.IsValid ? "valid" : "invalid")} {(Cell.IsFixed ? "fixed" : "unfixed")}")"
       type="text"
       maxlength=@MaxLength
       readonly="@Cell.IsFixed"
       value="@(Cell.Value == 0 ? "" : Cell.Value)"
       @oninput="HandleInput"
/>

@code {
    [Parameter] 
    [EditorRequired]
    public Sudoku_Library.Cell Cell { get; set; }
    
    [Parameter]
    [EditorRequired]
    public EventCallback<byte> UpdateCell { get; set; }

    private Board Board => BoardService.GetBoard();
    private int MaxLength => (int) Math.Log10(Board.Size) + 1;

    private async void HandleInput(ChangeEventArgs e)
    {
        if (byte.TryParse(e.Value?.ToString(), out var value) && value <= Board.Size)
        {
            await UpdateCell.InvokeAsync(value);
        }
    } 
    
}